-- Creating a database with the name yellow_tripdata
CREATE database yellow_tripdata;

-- Using the database for entire session.
USE yellow_tripdata;

-- Listing out the tables present in the database.
SHOW tables;

-- Creating a table with the name yellow_tripdata_table which simulates the uploaded csv file.
CREATE table yellow_tripdata_table( vendor_id string,
pickup_datetime string,
dropoff_datetime string,
passenger_count int,
trip_distance DECIMAL(9,6),
pickup_longitude DECIMAL(9,6),	
pickup_latitude DECIMAL(9,6),
rate_code int,
store_and_fwd_flag string,
dropoff_longitude DECIMAL(9,6),
dropoff_latitude DECIMAL(9,6),
payment_type string,
fare_amount DECIMAL(9,6),
extra DECIMAL(9,6),
mta_tax DECIMAL(9,6),
tip_amount DECIMAL(9,6),
tolls_amount DECIMAL(9,6),
total_amount DECIMAL(9,6),
trip_time_in_secs int)
row format delimited
fields terminated by ','
tblproperties('skip.header.line.count'='1');


-- Loading the data into the table 
LOAD DATA local inpath 'yellow_tripdata.csv' into table yellow_tripdata_table;

-- Projecting the table 
SELECT * FROM yellow_tripdata_table LIMIT 5;

-- 1. What is the total no of trips -- equals to the number of rows.
SELECT COUNT(*) FROM yellow_tripdata_table;  --- 10000

-- 2. What is the total revenue generated by all the trips? The fare is stored in the column total_amount.
SELECT SUM(total_amount) FROM yellow_tripdata_table; -- 160546.81

-- 3. What fraction of the total is paid for tolls? The toll is stored in tolls_amount.
SELECT SUM(tolls_amount)/SUM(total_amount) FROM yellow_tripdata_table; ---0.0155530340341237549

-- 4. What fraction of it is driver tips? The tip is stored in tip_amount.
SELECT SUM(tip_amount)/SUM(total_amount) FROM yellow_tripdata_table;  ----0.1078520339332808917

-- 5. What is the average trip amount?
SELECT AVG(total_amount) FROM yellow_tripdata_table; ------16.054681

-- 6. What is the average distance of the trips? Distance is stored in the column trip_distance.
SELECT AVG(trip_distance) FROM yellow_tripdata_table; ------3.253033

-- 7. How many different payment types are used?
SELECT COUNT(DISTINCT payment_type) FROM yellow_tripdata_table; -----4

SELECT DISTINCT payment_type FROM yellow_tripdata_table;

-- 8. For each payment type, display the following details:
	-- 1.Average fare generated
	-- 2.Average tip
	-- 3.Average tax â€“ tax is stored in column mta_tax
SELECT payment_type,AVG(fare_amount) AS avg_fare, AVG(tip_amount) AS avg_tip, AVG(mta_tax) AS avg_tax 
	FROM yellow_tripdata_table
	GROUP by payment_type;
	
	--1----13.5610182727   2.7042480087    0.4971107293
	--2----11.3933830986   0       0.4988732394
	--3----13.2107894737   0       0.4210526316
	--4----12.2222222222   0       0.5


-- Creating an external table
-- Before creating external table we need to have a folder in HDFS that contains data

hadoop fs -mkdir data
hadoop fs -put 'yellow_tripdata.csv' data

-- Now we can create an external table using external key word
CREATE external table yellow_tripdata_table_ext( vendor_id string,
pickup_datetime string,
dropoff_datetime string,
passenger_count int,
trip_distance DECIMAL(9,6),
pickup_longitude DECIMAL(9,6),	
pickup_latitude DECIMAL(9,6),
rate_code int,
store_and_fwd_flag string,
dropoff_longitude DECIMAL(9,6),
dropoff_latitude DECIMAL(9,6),
payment_type string,
fare_amount DECIMAL(9,6),
extra DECIMAL(9,6),
mta_tax DECIMAL(9,6),
tip_amount DECIMAL(9,6),
tolls_amount DECIMAL(9,6),
total_amount DECIMAL(9,6),
trip_time_in_secs int)
row format delimited
fields terminated by ','
location 'user/tharunkumargoka6783882/data'
tblproperties('skip.header.line.count'='1');
